{"remainingRequest":"/Users/fmenendez/Projects/fmenemo.github.io/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/Users/fmenendez/Projects/fmenemo.github.io/node_modules/ng2-markdown-to-html/dist/lib/markdown-to-html.component.js","dependencies":[{"path":"/Users/fmenendez/Projects/fmenemo.github.io/node_modules/ng2-markdown-to-html/dist/lib/markdown-to-html.component.js","mtime":1505676122000},{"path":"/Users/fmenendez/Projects/fmenemo.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1520868734714},{"path":"/Users/fmenendez/Projects/fmenemo.github.io/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, ElementRef, Input } from '@angular/core';\nimport { MarkdownToHtmlService } from './markdown-to-html.service';\nimport * as _marked from 'marked';\nvar marked = _marked;\nimport * as Prism from 'prismjs';\nimport 'prismjs/prism';\nimport 'prismjs/components/prism-c';\nimport 'prismjs/components/prism-cpp';\nimport 'prismjs/components/prism-csharp';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-diff';\nimport 'prismjs/components/prism-java';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-perl';\nimport 'prismjs/components/prism-php';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-sass';\nimport 'prismjs/components/prism-scss';\nimport 'prismjs/components/prism-typescript';\nexport var MarkdownToHtmlComponent = /*@__PURE__*/ (function () {\n    function MarkdownToHtmlComponent(element, mthService) {\n        this.element = element;\n        this.mthService = mthService;\n    }\n    MarkdownToHtmlComponent.prototype.ngAfterViewInit = function () {\n        if (this.data) {\n            this.handleData();\n            return;\n        }\n        if (this.src) {\n            this.handleSrc();\n            return;\n        }\n        this.handleRaw(this.element.nativeElement.innerHTML);\n    };\n    // SimpleChanges parameter is required for AoT compilation (do not remove)\n    MarkdownToHtmlComponent.prototype.ngOnChanges = function (changes) {\n        if ('data' in changes) {\n            this.handleData();\n            return;\n        }\n        if ('src' in changes) {\n            this.handleSrc();\n            return;\n        }\n    };\n    MarkdownToHtmlComponent.prototype.handleData = function () {\n        this.handleRaw(this.data);\n    };\n    MarkdownToHtmlComponent.prototype.handleSrc = function () {\n        var _this = this;\n        var extension = this.src\n            ? this.src.split('.').splice(-1).join()\n            : null;\n        this.mthService.getSource(this.src)\n            .subscribe(function (data) {\n            var raw = extension !== 'md'\n                ? '```' + extension + '\\n' + data + '\\n```'\n                : data;\n            _this.handleRaw(raw);\n        });\n    };\n    MarkdownToHtmlComponent.prototype.handleRaw = function (raw) {\n        var markdown = this.prepare(raw);\n        this.element.nativeElement.innerHTML = marked(markdown);\n        Prism.highlightAll(false);\n    };\n    MarkdownToHtmlComponent.prototype.prepare = function (raw) {\n        if (!raw) {\n            return '';\n        }\n        var indentStart;\n        return raw\n            .replace(/\\&gt;/g, '>')\n            .split('\\n')\n            .map(function (line) {\n            // find position of 1st non-whitespace character\n            // to determine the markdown indentation start\n            if (line.length > 0 && isNaN(indentStart)) {\n                indentStart = line.search(/\\S|$/);\n            }\n            // remove whitespaces before indentation start\n            return indentStart\n                ? line.substring(indentStart)\n                : line;\n        }).join('\\n');\n    };\n    return MarkdownToHtmlComponent;\n}());\n//# sourceMappingURL=markdown-to-html.component.js.map \n",null]}